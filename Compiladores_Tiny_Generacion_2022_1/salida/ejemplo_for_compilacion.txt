token BEGIN
token FOR
token ID
token ASSIGN
token NUM
token TO
	 numero entero
token NUM
token STEP
	 numero entero
token NUM
token WRITE
	 numero entero
token ID
token END
	 identificador
	 write expresion
	 sentencia unica
token SEMI
	 for con step
	 sentencia unica
token END
Syntax error
instead expected token classes are [error, IF, REPEAT, READ, WRITE, RETURN, CALL, VAR, FOR, BREAK, CONTINUE, ID]
	 error en sentencia
Error sintáctico en sentencia
	 secuencia sentencias
	 programa principal
	 regla programa solo main

IMPRESION DEL AST GENERADO

  Tipo de nodo desconocido
*** Tabla de Simbolos ***
Total de posiciones de memoria utilizadas: 1
Variable: i -> Direccion: 0


------ CODIGO OBJETO DEL LENGUAJE TINY GENERADO PARA LA TM ------


* * Compilacion TINY para la maquina TM
* * Prefacio estandar
0:      LDC       5,0(0)        init: GP = 0
1:      LDC       6,1023(0)      init: MP = 1023 (tope de memoria)
* * Fin del prefacio estandar
* -> programa
* -> for
* -> constante
2:      LDC       0,1(0)        cargar constante: 1
* <- constante
3:      ST        0,0(5)        for: inicializar variable i
* for: inicio del bucle
4:      LD        0,0(5)        for: cargar variable de control
5:      ST        0,0(6)        for: guardar variable en pila temp
* -> constante
6:      LDC       0,9(0)        cargar constante: 9
* <- constante
7:      LD        1,0(6)        for: cargar variable de pila temp
8:      SUB       0,1,0         for: variable - valor_final
* for: salto condicional al final
* -> escribir
* -> identificador
10:     LD        0,0(5)        cargar id: val[i]
* <- identificador
11:     OUT       0,0,0         escribir: genero la salida de la expresion
* <- escribir
* for: punto de continue
12:     LD        0,0(5)        for: cargar variable para incremento
13:     ST        0,0(6)        for: guardar variable en pila temp
* -> constante
14:     LDC       0,1(0)        cargar constante: 1
* <- constante
15:     LD        1,0(6)        for: cargar variable de pila temp
16:     ADD       0,1,0         for: incrementar variable
17:     ST        0,0(5)        for: guardar variable incrementada
18:     LDA       7,-15(7)      for: salto al inicio
* for: fin del bucle
9:      JGT       0,9(7)        for: saltar si variable > final
* <- for
* <- programa
* Fin de la ejecucion.
19:     HALT      0,0,0         


------ FIN DEL CODIGO OBJETO DEL LENGUAJE TINY GENERADO PARA LA TM ------

Generando archivo de código objeto: ejemplo_generado/ejemplo_for.tm
Generando código objeto en archivo: ejemplo_generado/ejemplo_for.tm
Archivo ejemplo_generado/ejemplo_for.tm generado exitosamente.
